// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TPSS.Data.Context;

#nullable disable

namespace TPSS.Data.Migrations
{
    [DbContext(typeof(TimeshareProjectSalesSystemContext))]
    [Migration("20240116131528_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TPSS.Data.Models.Entities.Contract", b =>
                {
                    b.Property<string>("ContractId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ContractID");

                    b.Property<DateOnly?>("ContractDate")
                        .HasColumnType("date");

                    b.Property<string>("ContractStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContractTerms")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double?>("Deposit")
                        .HasColumnType("float");

                    b.Property<string>("ReservationId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ReservationID");

                    b.HasKey("ContractId")
                        .HasName("PK__Contract__C90D34099AA800A1");

                    b.HasIndex("ReservationId");

                    b.ToTable("Contract", (string)null);
                });

            modelBuilder.Entity("TPSS.Data.Models.Entities.LikeList", b =>
                {
                    b.Property<int>("LikeId")
                        .HasColumnType("int")
                        .HasColumnName("LikeID");

                    b.Property<string>("PropertyId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("PropertyID");

                    b.Property<string>("UserId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("UserID");

                    b.HasKey("LikeId")
                        .HasName("PK__LikeList__A2922CF437D78B83");

                    b.HasIndex("PropertyId");

                    b.HasIndex(new[] { "UserId", "PropertyId" }, "UQ_UserProperty")
                        .IsUnique()
                        .HasFilter("[UserID] IS NOT NULL AND [PropertyID] IS NOT NULL");

                    b.ToTable("LikeList", (string)null);
                });

            modelBuilder.Entity("TPSS.Data.Models.Entities.Project", b =>
                {
                    b.Property<string>("ProjectId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ProjectID");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProjectId")
                        .HasName("PK__Project__761ABED0232A2A0E");

                    b.ToTable("Project", (string)null);
                });

            modelBuilder.Entity("TPSS.Data.Models.Entities.Property", b =>
                {
                    b.Property<string>("PropertyId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("PropertyID");

                    b.Property<string>("Owner")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProjectId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ProjectID");

                    b.Property<string>("PropertyName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Verify")
                        .HasColumnType("bit");

                    b.HasKey("PropertyId")
                        .HasName("PK__Property__70C9A755F657A2CD");

                    b.HasIndex("Owner");

                    b.HasIndex("ProjectId");

                    b.ToTable("Property", (string)null);
                });

            modelBuilder.Entity("TPSS.Data.Models.Entities.Reservation", b =>
                {
                    b.Property<string>("ReservationId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ReservationID");

                    b.Property<DateOnly?>("BookingDate")
                        .HasColumnType("date");

                    b.Property<string>("BuyerId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("BuyerID");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("PropertyId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("PropertyID");

                    b.Property<string>("SellerId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("SellerID");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ReservationId")
                        .HasName("PK__Reservat__B7EE5F04AD628F07");

                    b.HasIndex("BuyerId");

                    b.HasIndex("PropertyId");

                    b.HasIndex("SellerId");

                    b.ToTable("Reservation", (string)null);
                });

            modelBuilder.Entity("TPSS.Data.Models.Entities.Role", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("UserID");

                    b.Property<string>("Role1")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Role");

                    b.HasKey("UserId", "Role1")
                        .HasName("PK__Role__FA2998BF699973A0");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("TPSS.Data.Models.Entities.TransactionProcessing", b =>
                {
                    b.Property<string>("ProcessId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ProcessID");

                    b.Property<double?>("CommissionCalculation")
                        .HasColumnType("float")
                        .HasColumnName("Commission_Calculation");

                    b.Property<string>("ContractId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ContractID");

                    b.Property<double?>("Payment")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProcessId")
                        .HasName("PK__Transact__1B39A9762989D08C");

                    b.HasIndex("ContractId");

                    b.ToTable("Transaction_Processing", (string)null);
                });

            modelBuilder.Entity("TPSS.Data.Models.Entities.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("UserID");

                    b.Property<string>("DigitalSignature")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Digital_signature");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Verify")
                        .HasColumnType("bit");

                    b.HasKey("UserId")
                        .HasName("PK__User__1788CCAC2A7756CD");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("TPSS.Data.Models.Entities.Contract", b =>
                {
                    b.HasOne("TPSS.Data.Models.Entities.Reservation", "Reservation")
                        .WithMany("Contracts")
                        .HasForeignKey("ReservationId")
                        .HasConstraintName("FK__Contract__Reserv__33D4B598");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("TPSS.Data.Models.Entities.LikeList", b =>
                {
                    b.HasOne("TPSS.Data.Models.Entities.Property", "Property")
                        .WithMany("LikeLists")
                        .HasForeignKey("PropertyId")
                        .HasConstraintName("FK__LikeList__Proper__3B75D760");

                    b.HasOne("TPSS.Data.Models.Entities.User", "User")
                        .WithMany("LikeLists")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__LikeList__UserID__3A81B327");

                    b.Navigation("Property");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TPSS.Data.Models.Entities.Property", b =>
                {
                    b.HasOne("TPSS.Data.Models.Entities.User", "OwnerNavigation")
                        .WithMany("Properties")
                        .HasForeignKey("Owner")
                        .HasConstraintName("FK__Property__Owner__2C3393D0");

                    b.HasOne("TPSS.Data.Models.Entities.Project", "Project")
                        .WithMany("Properties")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK__Property__Projec__2B3F6F97");

                    b.Navigation("OwnerNavigation");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("TPSS.Data.Models.Entities.Reservation", b =>
                {
                    b.HasOne("TPSS.Data.Models.Entities.User", "Buyer")
                        .WithMany("ReservationBuyers")
                        .HasForeignKey("BuyerId")
                        .HasConstraintName("FK__Reservati__Buyer__30F848ED");

                    b.HasOne("TPSS.Data.Models.Entities.Property", "Property")
                        .WithMany("Reservations")
                        .HasForeignKey("PropertyId")
                        .HasConstraintName("FK__Reservati__Prope__2F10007B");

                    b.HasOne("TPSS.Data.Models.Entities.User", "Seller")
                        .WithMany("ReservationSellers")
                        .HasForeignKey("SellerId")
                        .HasConstraintName("FK__Reservati__Selle__300424B4");

                    b.Navigation("Buyer");

                    b.Navigation("Property");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("TPSS.Data.Models.Entities.Role", b =>
                {
                    b.HasOne("TPSS.Data.Models.Entities.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Role__UserID__267ABA7A");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TPSS.Data.Models.Entities.TransactionProcessing", b =>
                {
                    b.HasOne("TPSS.Data.Models.Entities.Contract", "Contract")
                        .WithMany("TransactionProcessings")
                        .HasForeignKey("ContractId")
                        .HasConstraintName("FK__Transacti__Contr__36B12243");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("TPSS.Data.Models.Entities.Contract", b =>
                {
                    b.Navigation("TransactionProcessings");
                });

            modelBuilder.Entity("TPSS.Data.Models.Entities.Project", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("TPSS.Data.Models.Entities.Property", b =>
                {
                    b.Navigation("LikeLists");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("TPSS.Data.Models.Entities.Reservation", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("TPSS.Data.Models.Entities.User", b =>
                {
                    b.Navigation("LikeLists");

                    b.Navigation("Properties");

                    b.Navigation("ReservationBuyers");

                    b.Navigation("ReservationSellers");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
